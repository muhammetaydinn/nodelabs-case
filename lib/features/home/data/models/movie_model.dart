import 'package:shartflix/features/home/domain/entities/movie.dart';

class MovieModel extends Movie {
  const MovieModel({
    required String? id,
    required String? mongoId,
    required String? title,
    required String? year,
    required String? rated,
    required String? released,
    required String? runtime,
    required String? genre,
    required String? director,
    required String? writer,
    required String? actors,
    required String? plot,
    required String? language,
    required String? country,
    required String? awards,
    required String? poster,
    required String? metascore,
    required String? imdbRating,
    required String? imdbVotes,
    required String? imdbID,
    required String? type,
    required String? response,
    required List<String>? images,
    required bool? comingSoon,
    required bool? isFavorite,
  }) : super(
         id: id,
         mongoId: mongoId,
         title: title,
         year: year,
         rated: rated,
         released: released,
         runtime: runtime,
         genre: genre,
         director: director,
         writer: writer,
         actors: actors,
         plot: plot,
         language: language,
         country: country,
         awards: awards,
         poster: poster,
         metascore: metascore,
         imdbRating: imdbRating,
         imdbVotes: imdbVotes,
         imdbID: imdbID,
         type: type,
         response: response,
         images: images,
         comingSoon: comingSoon,
         isFavorite: isFavorite,
       );

  factory MovieModel.fromJson(Map<String, dynamic> json) {
    return MovieModel(
      id: json['id'] as String?,
      mongoId: json['_id'] as String?,
      title: json['Title'] as String?,
      year: json['Year'] as String?,
      rated: json['Rated'] as String?,
      released: json['Released'] as String?,
      runtime: json['Runtime'] as String?,
      genre: json['Genre'] as String?,
      director: json['Director'] as String?,
      writer: json['Writer'] as String?,
      actors: json['Actors'] as String?,
      plot: json['Plot'] as String?,
      language: json['Language'] as String?,
      country: json['Country'] as String?,
      awards: json['Awards'] as String?,
      poster: json['Poster'] as String?,
      metascore: json['Metascore'] as String?,
      imdbRating: json['imdbRating'] as String?,
      imdbVotes: json['imdbVotes'] as String?,
      imdbID: json['imdbID'] as String?,
      type: json['Type'] as String?,
      response: json['Response'] as String?,
      images: json['Images'] != null
          ? List<String>.from(json['Images'] as List)
          : null,
      comingSoon: json['ComingSoon'] as bool?,
      isFavorite: json['isFavorite'] as bool?,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      '_id': mongoId,
      'Title': title,
      'Year': year,
      'Rated': rated,
      'Released': released,
      'Runtime': runtime,
      'Genre': genre,
      'Director': director,
      'Writer': writer,
      'Actors': actors,
      'Plot': plot,
      'Language': language,
      'Country': country,
      'Awards': awards,
      'Poster': poster,
      'Metascore': metascore,
      'imdbRating': imdbRating,
      'imdbVotes': imdbVotes,
      'imdbID': imdbID,
      'Type': type,
      'Response': response,
      'Images': images,
      'ComingSoon': comingSoon,
      'isFavorite': isFavorite,
    };
  }
}
